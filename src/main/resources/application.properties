server.port: 9000
management.port: 9001
management.address: 127.0.0.1

#log
logging.level.io.dynamicus=DEBUG

#banner
spring.banner.location=classpath:/parkitbanner.txt

## Keycloak configuration START
keycloak.enabled = true

keycloak.realm = springboot
keycloak.auth-server-url = http://localhost:8080/auth
keycloak.ssl-required = external
keycloak.resource = springboot-backend

#Confidential type
keycloak.credentials.secret =d054d74a-8350-458d-8e8c-448355d855a6
keycloak.confidential-port=0
#keycloak.use-resource-role-mappings =true
#keycloak.verify-token-audience=true
keycloak.securityConstraints[0].securityCollections[0].name = spring secured api
keycloak.securityConstraints[0].authRoles[0] = admin
keycloak.securityConstraints[0].authRoles[1] = user
keycloak.securityConstraints[0].securityCollections[0].patterns[0] = /api/*
keycloak.securityConstraints[0].securityCollections[0].patterns[1] = /*
## Keycloak configuration END

#Identity provider
idp.client.id=springboot-backend
idp.client.secret=d054d74a-8350-458d-8e8c-448355d855a6
idp.access.token.uri=http://localhost:8080/auth/realms/springboot/protocol/openid-connect/token
idp.user.authorization.uri=http://localhost:8080/auth/realms/springboot/protocol/openid-connect/auth
idp.redirect.uri=http://localhost:9000/login
idp.client.scope=email, profile

idp.jwk.url=http://localhost:8080/auth/realms/springboot/protocol/openid-connect/certs
idp.claims.issuer=http://localhost:8080/auth/realms/springboot
idp.claims.audience=springboot-backend
#Identity provider